services:
  neo4j:
    image: neo4j:5.26.0-community-bullseye
    container_name: neo4j
    hostname: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    environment:
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4JLABS_PLUGINS=["apoc"]
      - NEO4J_server_config_strict__validation_enabled=false
      - NEO4J_AUTH=${NEO4J_USERNAME}/${NEO4J_PASSWORD}
    env_file:
      - .env
    networks:
      - default
    healthcheck:
      test: ["CMD", "cypher-shell", "--username", "${NEO4J_USERNAME}", "--password", "${NEO4J_PASSWORD}", "RETURN 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:14-alpine
    container_name: postgres
    hostname: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - default
    depends_on:
      neo4j:
        condition: service_healthy

volumes:
  neo4j_data:
  postgres_data:
